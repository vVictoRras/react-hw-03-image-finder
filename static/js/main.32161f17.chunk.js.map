{"version":3,"sources":["components/Modal/Modal.jsx","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Spiner/Spiner.jsx","services/imagesApi.js","services/scroll.js","App.js","index.js"],"names":["modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","onClose","handleBackdropClick","target","currentTarget","window","addEventListener","this","removeEventListener","url","alt","createPortal","className","onClick","src","Component","Searchbar","state","inputValue","handleChange","setState","value","handleSubmit","preventDefault","onSubmit","type","onChange","autoComplete","autoFocus","placeholder","ImageGalleryItem","dataUrl","onListItemClick","data-url","ImageGallery","galleryList","onImgClick","map","id","largeImageURL","webformatURL","tags","Button","label","onBtnClick","Spiner","color","height","width","apiKey","axios","defaults","baseURL","fetchImages","searchQuery","page","get","then","data","scroll","scrollTo","top","documentElement","scrollHeight","behavior","App","gallery","largeImageAlt","showModal","isLoading","onChangeQuery","fetchImg","hits","prevState","catch","error","console","log","finally","handleImgClick","dataset","attributes","toggleModal","prevProps","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.32161f17.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { url, alt } = this.props;\n\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={url} alt={alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Searchbar extends Component {\n  state = {\n    inputValue: '',\n  };\n\n  handleChange = e => {\n    this.setState({ inputValue: e.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.inputValue);\n  };\n\n  render() {\n    const { inputValue } = this.state;\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            onChange={this.handleChange}\n            type=\"text\"\n            value={inputValue}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({ url, alt, dataUrl, onListItemClick }) => (\n  <li className=\"ImageGalleryItem\">\n    <img\n      className=\"ImageGalleryItem-image\"\n      src={url}\n      alt={alt}\n      data-url={dataUrl}\n      onClick={onListItemClick}\n    />\n  </li>\n);\n\nImageGalleryItem.propTypes = {\n  onListItemClick: PropTypes.func.isRequired,\n  url: PropTypes.string,\n  alt: PropTypes.string,\n  dataUrl: PropTypes.string,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\n\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nconst ImageGallery = ({ galleryList, onImgClick }) => (\n  <ul className=\"ImageGallery\">\n    {galleryList.map(({ id, largeImageURL, webformatURL, tags }) => (\n      <ImageGalleryItem\n        key={id}\n        url={webformatURL}\n        alt={tags}\n        dataUrl={largeImageURL}\n        onListItemClick={onImgClick}\n      />\n    ))}\n  </ul>\n);\n\nImageGallery.propTypes = {\n  galleryList: PropTypes.array.isRequired,\n  onImgClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\n\nconst Button = ({ label, onBtnClick }) => (\n  <button className=\"Button\" type=\"button\" onClick={onBtnClick}>\n    {label}\n  </button>\n);\n\nButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  onBtnClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst Spiner = () => (\n  <div className=\"loader__container\">\n    <Loader type=\"BallTriangle\" color=\"#3f51b5\" height={100} width={100} />\n  </div>\n);\n\nexport default Spiner;\n","import axios from 'axios';\n\nconst apiKey = '21082651-9188b9bfb810422ce45a2516d';\naxios.defaults.baseURL = 'https://pixabay.com';\n\nconst fetchImages = (searchQuery = '', page = 1) => {\n  return axios\n    .get(\n      `/api/?q=${searchQuery}&page=${page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n    .then(({ data }) => data);\n};\n\nexport default fetchImages;\n","const scroll = () => {\n  window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: 'smooth',\n  });\n};\n\nexport default scroll;\n","import React, { Component } from 'react';\n\nimport Modal from './components/Modal/Modal';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Spiner from './components/Spiner/Spiner';\n\nimport fetchImages from './services/imagesApi';\nimport scroll from './services/scroll';\n\nclass App extends Component {\n  state = {\n    gallery: [],\n    page: 1,\n    searchQuery: '',\n    largeImageURL: '',\n    largeImageAlt: '',\n    showModal: false,\n    isLoading: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { searchQuery, gallery } = this.state;\n    if (prevState.searchQuery !== searchQuery) {\n      this.fetchImg();\n    }\n\n    if (gallery.length) {\n      scroll();\n    }\n  }\n\n  onChangeQuery = inputValue => {\n    if (!inputValue) {\n      return;\n    }\n    this.setState({ gallery: [], page: 1, searchQuery: inputValue });\n  };\n\n  fetchImg = () => {\n    const { page, searchQuery } = this.state;\n\n    this.setState({ isLoading: true });\n\n    fetchImages(searchQuery, page)\n      .then(({ hits }) => {\n        this.setState(prevState => ({\n          gallery: [...prevState.gallery, ...hits],\n          page: prevState.page + 1,\n        }));\n      })\n      .catch(error => console.log(error))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  handleImgClick = e => {\n    const url = e.currentTarget.dataset.url;\n    const alt = e.currentTarget.attributes.alt.value;\n\n    this.setState({ largeImageURL: url, largeImageAlt: alt }, () =>\n      this.toggleModal(),\n    );\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  render() {\n    const {\n      gallery,\n      showModal,\n      largeImageURL,\n      largeImageAlt,\n      isLoading,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {showModal && (\n          <Modal\n            url={largeImageURL}\n            alt={largeImageAlt}\n            onClose={this.toggleModal}\n          />\n        )}\n        <Searchbar onSubmit={this.onChangeQuery} />\n        <ImageGallery galleryList={gallery} onImgClick={this.handleImgClick} />\n        {gallery.length > 0 && !isLoading && (\n          <Button label=\"Load more\" onBtnClick={this.fetchImg} />\n        )}\n        {isLoading && <Spiner />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}